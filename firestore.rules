rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isStaging() {
      return request.auth == null && request.resource != null && (
        request.origin.matches('.*-staging.vercel.app') ||
        request.origin.matches('.*-test.vercel.app') ||
        request.origin.matches('.*-dev.vercel.app')
      );
    }

    function isDevelopment() {
      return request.auth == null && (
        request.origin.matches('localhost:.*') ||
        request.origin.matches('127.0.0.1:.*')
      );
    }

    function isAuthenticated() {
      return request.auth != null;
    }

    // Base rules for development and staging
    match /{document=**} {
      allow read: if true;  // Anyone can read
      allow write: if isDevelopment() || isStaging() || isAuthenticated();  // Allow writes in development, staging, or if authenticated
    }

    // Production rules
    match /songs/{songId} {
      allow read: if true;  // Anyone can read songs
      allow write: if isDevelopment() || isStaging() || isAuthenticated();  // Allow writes if authenticated
    }

    match /config/{configId} {
      allow read: if true;
      allow write: if isDevelopment() || isStaging() || isAuthenticated();  // Allow writes if authenticated
    }

    match /tags/{tagId} {
      allow read: if true;
      allow write: if isDevelopment() || isStaging() || isAuthenticated();  // Allow writes if authenticated
    }
  }
} 